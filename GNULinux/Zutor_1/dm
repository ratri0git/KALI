

SORT : 

    SORT BY CHARACTOR VALUE : sort Filename

    SORT REVERSE BY CHARACTOR VALUE : sort -r Filename

    SORT BY NUMERIC VALUE : sort -n Filename

    SORT UNIQUE VALUES : sort -u Filename

    SORT UNIQUE VALUES CASE INSESITIVE : sort -uf Filename

    SORT BY COLUMN Nth VALUES : sort -k2 Filename


UNIQUE : 

    REMOVE DUPLICATE LINES : uniq Filename

    GET UNIQUE VALUES ONLY : uniq -u Filename

    GET DUPLICATE VALUES ONLY : uniq -d Filename

    GET DUPLICATE VALUES WITH DUPLICATES : uniq -D Filename

    OVERCOME NON ADJECENT DUPLICATES : sort Filename | uniq


GREP :

    SEARCH PATTERN IN FILE : grep KeyPattern Filename

    IGNORE LOWER UPPER CASES IN PATTERN : grep -i KeyPattern Filename

    SEARCH EXACT WORD IN FILE : grep -w Word Filename

    RETURN NUMBER LINE OF SEARCH PATTERN : grep -n KeyPattern Filename

    RETURN EXCEPT PATTERN IN LINE : grep -v KeyPattern Filename

    HOW MANY TIMES A PATTERN FOUND : grep -c KeyPattern Filename

    SEARCH IN EVERY FILE IN DIRECTORY AND SUBDIRECTORIES : grep -R KeyPattern /Path/Of/Directory
    

REGULAR EXPRESSIONS : 

    LINE BIGINNING WITH PATTERN : grep ^Pattern Filename

    LINE ENDING WITH PATTERN : grep Pattern$ Filename

    LINE CONTAINING THIS CHARACTOR : grep char. Filename

    LINE CONTAINING THESE CHARACTORS IN BRACKETS: grep some[a1B2c3]some Filename

    LINE EXCLUDING CHARACTORS IN BRACKETS :  grep some[^a1b2C3]some Filename

    LINE CONTAINING THESE CHARACTORS IN RANGE : grep some[A-Z]some Filename


TRANSLATE : 

    CONVERT LOWER CASE TO UPPER CASE : tr a-z A-Z < Filename_OR_OtherInput

    DELETE GIVEN CHARACTOR : tr -d GivenCharactorSet < Filename_OR_OtherInput

    REPLACE ONE WITH ANOTHER : tr 'OldCharactors' 'NewCharactors' < Filename


SED : 

    SUBSTITUTE FIRST OCCURENCE IN LINE : 
        
        sed 's/old_Value/New_Value/g' Filename
        sed 's:old_Value:New_Value:g' Filename

    MULTIPLE SED COMMANDS : sed -e 's/old/new/g' -e 's/old2/new2/g' Filename

    USE SEDFILE CONTAINING SED COMMANDS : sed -f sedfile Filename

    PUT BRACKETS AROUND SEARCHKEY : sed 's/Searkey/{&}/g' Filename
    
    TURN OFF PRINTING : sed -n 's/old/new/g' Filename

    PRINT ONLU UPDATED LINES : sed -n 's/old/new/p' Filename

    GET ONLY Nth LINE : sed -n Np Filename

    GET ONLY LAST LINE : sed -n '$p' Filename

    PRINT IN RANGE OF NtH TO Mth LINE : sed -n 'N,M p' Filename

    PRINT AFTER FINDING LINE START WITH X TILL FINDING LINE START WITH Y : sed -n '/^X,/^Y/p' Filename


CUT : 
    
    Nth CHARACTOR FROM EACH LINE : cut -c N Filename

    Nth PART BY FIELD SAPERATOR WITH DELIMITER : cut -f N -d "delimiter" Filename 

    WITH RANGE : 

        Nth TO Mth INDEX : cut -c N-M Filename

        START TO Nth CHARACTOR : cut -c -N Filename

        Nth CHARACTOR TO ENDING : cut -c N- Filename

        OUTPUT DELIMITER FOR MULTIPLE FIELDS : cut -c -M,A-K,P- --output-delimiter "delimiter" Filename

        
PASTE : 

    MERGE LINES IN FILE : paste -d 'delimiter' -s Filename
    

JOIN AND SPLIT : 

    JOIN CONTENTS OF TWO SORTED FILES : join File_1 File_2

    JOIN CONTENTS OF TWO UNSORTED FILES WITH MATCHING FIELD : join -1 Nth -2 Mth File_1 File_2

    SPLIT FILE INTO FILES WITH EACH N LINES : split -l N BigFile

        
